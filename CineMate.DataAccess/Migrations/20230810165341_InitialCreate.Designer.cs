// <auto-generated />
using System;
using CineMate.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CineMate.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230810165341_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CineMate.Domain.Entities.Actor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5019),
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5020),
                            FirstName = "Jane",
                            IsDeleted = false,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5021),
                            FirstName = "Michael",
                            IsDeleted = false,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5022),
                            FirstName = "Emily",
                            IsDeleted = false,
                            LastName = "Williams"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5022),
                            FirstName = "David",
                            IsDeleted = false,
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5023),
                            FirstName = "Sophia",
                            IsDeleted = false,
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5024),
                            FirstName = "Robert",
                            IsDeleted = false,
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5025),
                            FirstName = "Olivia",
                            IsDeleted = false,
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5025),
                            FirstName = "William",
                            IsDeleted = false,
                            LastName = "Garcia"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5026),
                            FirstName = "Ava",
                            IsDeleted = false,
                            LastName = "Rodriguez"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5027),
                            FirstName = "Ethan",
                            IsDeleted = false,
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5028),
                            FirstName = "Mia",
                            IsDeleted = false,
                            LastName = "Hernandez"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5028),
                            FirstName = "Daniel",
                            IsDeleted = false,
                            LastName = "Lopez"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5029),
                            FirstName = "Emma",
                            IsDeleted = false,
                            LastName = "Gonzalez"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5030),
                            FirstName = "Alexander",
                            IsDeleted = false,
                            LastName = "Perez"
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Country = "Uzbekistan",
                            CountryCode = "UZ",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4984),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            Country = "United States",
                            CountryCode = "US",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4987),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3L,
                            Country = "Russia",
                            CountryCode = "RU",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4988),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4L,
                            Country = "United Kingdom",
                            CountryCode = "UK",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4989),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5L,
                            Country = "Germany",
                            CountryCode = "DE",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4990),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6L,
                            Country = "France",
                            CountryCode = "FR",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4990),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7L,
                            Country = "China",
                            CountryCode = "CN",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4991),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8L,
                            Country = "India",
                            CountryCode = "IN",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4992),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9L,
                            Country = "Japan",
                            CountryCode = "JP",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4993),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10L,
                            Country = "South Korea",
                            CountryCode = "KR",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4994),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Director", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5055),
                            FirstName = "Christopher",
                            IsDeleted = false,
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5057),
                            FirstName = "Steven",
                            IsDeleted = false,
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5058),
                            FirstName = "Quentin",
                            IsDeleted = false,
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5059),
                            FirstName = "Greta",
                            IsDeleted = false,
                            LastName = "Gerwig"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5060),
                            FirstName = "Martin",
                            IsDeleted = false,
                            LastName = "Scorsese"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5061),
                            FirstName = "Ava",
                            IsDeleted = false,
                            LastName = "DuVernay"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5061),
                            FirstName = "Denis",
                            IsDeleted = false,
                            LastName = "Villeneuve"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5062),
                            FirstName = "Kathryn",
                            IsDeleted = false,
                            LastName = "Bigelow"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5063),
                            FirstName = "Taika",
                            IsDeleted = false,
                            LastName = "Waititi"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5064),
                            FirstName = "Sofia",
                            IsDeleted = false,
                            LastName = "Coppola"
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Genre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5087),
                            IsDeleted = false,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5089),
                            IsDeleted = false,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5089),
                            IsDeleted = false,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5090),
                            IsDeleted = false,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5091),
                            IsDeleted = false,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5092),
                            IsDeleted = false,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5092),
                            IsDeleted = false,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5093),
                            IsDeleted = false,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5093),
                            IsDeleted = false,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5094),
                            IsDeleted = false,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DirectorId")
                        .HasColumnType("bigint");

                    b.Property<long>("GenreId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressId = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5115),
                            DirectorId = 1L,
                            GenreId = 4L,
                            IsDeleted = false,
                            Rating = 4.8m,
                            ReleaseDate = new DateTime(2023, 3, 9, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2L,
                            AddressId = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5127),
                            DirectorId = 2L,
                            GenreId = 2L,
                            IsDeleted = false,
                            Rating = 4.5m,
                            ReleaseDate = new DateTime(2022, 7, 19, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            Id = 3L,
                            AddressId = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5129),
                            DirectorId = 1L,
                            GenreId = 1L,
                            IsDeleted = false,
                            Rating = 8.5m,
                            ReleaseDate = new DateTime(2022, 7, 14, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Adventure Awaits"
                        },
                        new
                        {
                            Id = 4L,
                            AddressId = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5131),
                            DirectorId = 3L,
                            GenreId = 9L,
                            IsDeleted = false,
                            Rating = 4.7m,
                            ReleaseDate = new DateTime(2021, 5, 14, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 5L,
                            AddressId = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5132),
                            DirectorId = 4L,
                            GenreId = 8L,
                            IsDeleted = false,
                            Rating = 4.6m,
                            ReleaseDate = new DateTime(2020, 9, 7, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 6L,
                            AddressId = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5134),
                            DirectorId = 5L,
                            GenreId = 2L,
                            IsDeleted = false,
                            Rating = 4.3m,
                            ReleaseDate = new DateTime(2019, 2, 4, 19, 0, 0, 0, DateTimeKind.Utc),
                            Title = "The Irishman"
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Movies.MovieActor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ActorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActor");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActorId = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8211),
                            IsDeleted = false,
                            MovieId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ActorId = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8214),
                            IsDeleted = false,
                            MovieId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            ActorId = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8215),
                            IsDeleted = false,
                            MovieId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            ActorId = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8216),
                            IsDeleted = false,
                            MovieId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            ActorId = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8216),
                            IsDeleted = false,
                            MovieId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            ActorId = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8217),
                            IsDeleted = false,
                            MovieId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            ActorId = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8218),
                            IsDeleted = false,
                            MovieId = 3L
                        },
                        new
                        {
                            Id = 8L,
                            ActorId = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8219),
                            IsDeleted = false,
                            MovieId = 3L
                        },
                        new
                        {
                            Id = 9L,
                            ActorId = 7L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8219),
                            IsDeleted = false,
                            MovieId = 3L
                        },
                        new
                        {
                            Id = 10L,
                            ActorId = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8220),
                            IsDeleted = false,
                            MovieId = 4L
                        },
                        new
                        {
                            Id = 11L,
                            ActorId = 8L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8221),
                            IsDeleted = false,
                            MovieId = 4L
                        },
                        new
                        {
                            Id = 12L,
                            ActorId = 10L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8222),
                            IsDeleted = false,
                            MovieId = 4L
                        },
                        new
                        {
                            Id = 13L,
                            ActorId = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8222),
                            IsDeleted = false,
                            MovieId = 5L
                        },
                        new
                        {
                            Id = 14L,
                            ActorId = 10L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8223),
                            IsDeleted = false,
                            MovieId = 5L
                        },
                        new
                        {
                            Id = 15L,
                            ActorId = 12L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8224),
                            IsDeleted = false,
                            MovieId = 5L
                        },
                        new
                        {
                            Id = 16L,
                            ActorId = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8224),
                            IsDeleted = false,
                            MovieId = 6L
                        },
                        new
                        {
                            Id = 17L,
                            ActorId = 12L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8225),
                            IsDeleted = false,
                            MovieId = 6L
                        },
                        new
                        {
                            Id = 18L,
                            ActorId = 14L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 236, DateTimeKind.Utc).AddTicks(8226),
                            IsDeleted = false,
                            MovieId = 6L
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4826),
                            DateOfBirth = new DateTime(1998, 7, 21, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "muqimjon@gmail.com",
                            FirstName = "Muqimjon",
                            IsDeleted = false,
                            LastName = "Mamadaliyev",
                            Password = "a",
                            Phone = "+998937349808",
                            Role = 3
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4854),
                            DateOfBirth = new DateTime(2006, 10, 12, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "abdurahmon@gmail.com",
                            FirstName = "Iskandar",
                            IsDeleted = false,
                            LastName = "Qodirov",
                            Password = "a",
                            Phone = "+998972350120",
                            Role = 3
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4856),
                            DateOfBirth = new DateTime(2005, 11, 3, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "madiyor@gmail.com",
                            FirstName = "Madiyor",
                            IsDeleted = false,
                            LastName = "Odilov",
                            Password = "a",
                            Phone = "+998903638333",
                            Role = 3
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4858),
                            DateOfBirth = new DateTime(2004, 2, 19, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "nodir@gmail.com",
                            FirstName = "Nodir",
                            IsDeleted = false,
                            LastName = "Ollonazarov",
                            Password = "a",
                            Phone = "+998881813525",
                            Role = 3
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4860),
                            DateOfBirth = new DateTime(2003, 8, 15, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "nurullo@gmail.com",
                            FirstName = "Nurullo",
                            IsDeleted = false,
                            LastName = "Nurmatov",
                            Password = "a",
                            Phone = "+998330022816",
                            Role = 3
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4862),
                            DateOfBirth = new DateTime(2002, 8, 17, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ravshanbek@gmail.com",
                            FirstName = "Ravshanbek",
                            IsDeleted = false,
                            LastName = "Isroilov",
                            Password = "a",
                            Phone = "+998902528196",
                            Role = 3
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4863),
                            DateOfBirth = new DateTime(1988, 4, 6, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "avazbek@gmail.com",
                            FirstName = "Avazbek",
                            IsDeleted = false,
                            LastName = "Siddiqov",
                            Password = "a",
                            Phone = "+998973340334",
                            Role = 3
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(4865),
                            DateOfBirth = new DateTime(2001, 11, 27, 19, 0, 0, 0, DateTimeKind.Utc),
                            Email = "abdualim@gmail.com",
                            FirstName = "Abdualim",
                            IsDeleted = false,
                            LastName = "Normurodov",
                            Password = "a",
                            Phone = "+998950642799",
                            Role = 3
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.UserRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRatings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Amazing movie!",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5155),
                            IsDeleted = false,
                            MovieId = 1L,
                            Rating = 5,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "Really enjoyed it.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5159),
                            IsDeleted = false,
                            MovieId = 2L,
                            Rating = 4,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "Good story.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5160),
                            IsDeleted = false,
                            MovieId = 4L,
                            Rating = 4,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Comment = "Impressive acting.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5162),
                            IsDeleted = false,
                            MovieId = 1L,
                            Rating = 5,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Comment = "Not bad.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5163),
                            IsDeleted = false,
                            MovieId = 5L,
                            Rating = 3,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Comment = "Entertaining!",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5163),
                            IsDeleted = false,
                            MovieId = 6L,
                            Rating = 4,
                            UserId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            Comment = "A true masterpiece.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5164),
                            IsDeleted = false,
                            MovieId = 5L,
                            Rating = 4,
                            UserId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            Comment = "Outstanding.",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5165),
                            IsDeleted = false,
                            MovieId = 4L,
                            Rating = 5,
                            UserId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            Comment = "Enjoyed the movie",
                            CreatedAt = new DateTime(2023, 8, 10, 16, 53, 41, 235, DateTimeKind.Utc).AddTicks(5166),
                            IsDeleted = false,
                            MovieId = 3L,
                            Rating = 4,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Movie", b =>
                {
                    b.HasOne("CineMate.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineMate.Domain.Entities.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineMate.Domain.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Director");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("CineMate.Domain.Entities.Movies.MovieActor", b =>
                {
                    b.HasOne("CineMate.Domain.Entities.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineMate.Domain.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CineMate.Domain.Entities.UserRating", b =>
                {
                    b.HasOne("CineMate.Domain.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineMate.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
